-- DDL 제약조건 
-- 제약조건 정보 확인
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'EMPLOYEE';
-- CONSTRAINT_TYPE
/*  
    P : PRIMARY KEY
    R : FOREIGN KEY
    C : CHECK OR NOT NULL
    U : UNIQUE
*/

CREATE TABLE USER_NONE (
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PWD VARCHAR2(30),
    USER_NAME VARCHAR2(30),
    GENDER CHAR(2),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)    
);
INSERT INTO USER_NONE
VALUES(1,'user01','pass01','홍길동','M','010-1234-2345',
    'hong123@iei.or.kr');

INSERT INTO USER_NONE
VALUES(1,NULL,NULL,NULL,NULL,'010-1234-2345',
    'hong123@iei.or.kr');
        
SELECT * FROM USER_NONE;

CREATE TABLE USER_NOTNULL (
    USER_NO NUMBER NOT NULL, --NOT NULL은 컬럼 레벨만 가능
    USER_ID VARCHAR2(20) NOT NULL,
    USER_PWD VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30) NOT NULL,
    GENDER CHAR(2) NOT NULL,
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)
);

INSERT INTO USER_NOTNULL
VALUES(1,NULL,NULL,NULL,NULL,'010-1234-2345',
    'hong123@iei.or.kr'); -- 실패!
    
CREATE TABLE USER_UNIQUE (
    USER_NO NUMBER UNIQUE, 
    USER_ID VARCHAR2(20) NOT NULL, --NOT NULL은 컬럼 레벨만 가능
    USER_PWD VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30) NOT NULL,
    GENDER CHAR(2) NOT NULL,
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)
    -- UNIQUE(USER_NO) 테이블레벨
);

INSERT INTO USER_UNIQUE
VALUES(1,'user01','pass01','홍길동','M','010-1234-2345',
    'hong123@iei.or.kr');
INSERT INTO USER_UNIQUE
VALUES(NULL,'user01','pass01','홍길동','M','010-1234-2345',
    'hong123@iei.or.kr');
SELECT * FROM USER_UNIQUE;

CREATE TABLE USER_PRIMARYKEY (
    USER_NO NUMBER UNIQUE, 
    USER_ID VARCHAR2(20) PRIMARY KEY, --NOT NULL은 컬럼 레벨만 가능
    USER_PWD VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30) NOT NULL,
    GENDER CHAR(2) NOT NULL,
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)
    -- UNIQUE(USER_NO), 테이블레벨
    -- PRIMARY KEY(USER_ID) 테이블 레벨
);

INSERT INTO USER_PRIMARYKEY
VALUES(1,'user01','pass01','홍길동','M','010-1234-2345',
    'hong123@iei.or.kr');
INSERT INTO USER_PRIMARYKEY
VALUES(2,'user02','pass01','홍길동','M','010-1234-2345',
    'hong123@iei.or.kr');
    INSERT INTO USER_PRIMARYKEY
VALUES(3,NULL,'pass01','홍길동','M','010-1234-2345',
    'hong123@iei.or.kr');
SELECT * FROM USER_PRIMARYKEY;

-- FOREIGN KEY

CREATE TABLE SHOP_MEMBER(
     USER_NO NUMBER UNIQUE,
     USER_ID VARCHAR2(20) PRIMARY KEY,
     USER_PWD VARCHAR2(30) NOT NULL,
     USER_NAME VARCHAR2(30),
     GENDER VARCHAR2(10),
     PHONE VARCHAR2(30),
     EMAIL VARCHAR2(50)
);

INSERT INTO SHOP_MEMBER VALUES(1,'user01','pass01','홍길동','남',
    '010-1234-5678','hong123@kh.or.kr');
INSERT INTO SHOP_MEMBER VALUES(2,'user02','pass02','이순신','남',
    '010-1111-2222','lee000@kh.or.kr');
INSERT INTO SHOP_MEMBER VALUES(3,'user03','pass03','유관순','여',
    '010-3333-4444','you11@kh.or.kr');
INSERT INTO SHOP_MEMBER VALUES(4,'user04','pass04','안중근','남',
    '010-5555-6666','ahn09@kh.or.kr');
INSERT INTO SHOP_MEMBER VALUES(5,'user05','pass05','윤봉길','남',
    '010-7777-8888','yoon08@kh.or.kr');
    
SELECT * FROM SHOP_MEMBER;

CREATE TABLE SHOP_BUY( --회원이 물품을 구매했을 때 기록하는 테이블 
    BUY_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) REFERENCES SHOP_MEMBER (USER_ID),
    PRODUCT_NAME VARCHAR2(20),
    REG_DATE DATE
);
INSERT INTO SHOP_BUY VALUES(1,'user01','축구화',SYSDATE);
INSERT INTO SHOP_BUY VALUES(3,'user02','농구화',SYSDATE);
INSERT INTO SHOP_BUY VALUES(4,'user03','족구화',SYSDATE);
INSERT INTO SHOP_BUY VALUES(2,'user05','농구화',SYSDATE);
INSERT INTO SHOP_BUY VALUES(3,'user06','배구화',SYSDATE);

-----------------------------------------------------------

CREATE TABLE SHOP_BUY2( --회원이 물품을 구매했을 때 기록하는 테이블 
    BUY_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) REFERENCES SHOP_MEMBER (USER_ID)
        ON DELETE SET NULL,
    PRODUCT_NAME VARCHAR2(20),
    REG_DATE DATE
);
INSERT INTO SHOP_BUY2 VALUES(1,'user01','축구화',SYSDATE);
INSERT INTO SHOP_BUY2 VALUES(2,'user02','피구화',SYSDATE);
INSERT INTO SHOP_BUY2 VALUES(3,'user03','족구화',SYSDATE);
SELECT * FROM SHOP_BUY2;
DROP TABLE SHOP_BUY;
DELETE FROM SHOP_MEMBER WHERE USER_ID = 'user02';

-----------------------------------------------------------

CREATE TABLE SHOP_BUY3( --회원이 물품을 구매했을 때 기록하는 테이블 
    BUY_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) REFERENCES SHOP_MEMBER (USER_ID)
        ON DELETE CASCADE,
    PRODUCT_NAME VARCHAR2(20),
    REG_DATE DATE
);
INSERT INTO SHOP_BUY3 VALUES(1,'user01','축구화',SYSDATE);
INSERT INTO SHOP_BUY3 VALUES(2,'user04','피구화',SYSDATE);
INSERT INTO SHOP_BUY3 VALUES(3,'user03','족구화',SYSDATE);
SELECT * FROM SHOP_BUY3;
DROP TABLE SHOP_BUY2;
DELETE FROM SHOP_MEMBER WHERE USER_ID = 'user04';

SELECT * FROM SHOP_BUY;
SELECT * FROM SHOP_MEMBER;

-- 삭제
-- 기본 옵션은 ON DELETE RESTRICTED
-- NULL로 만드는 옵션은 ON DELETE SET NULL
-- 연관된 모든 것을 삭제하는 옵션은 ON DELETE CASCADE

DELETE FROM SHOP_BUY -- 구매내역 삭제
WHERE USER_ID = 'user01';
DELETE FROM SHOP_MEMBER -- 쇼핑몰 탈퇴 (X)
WHERE USER_ID = 'user02';



