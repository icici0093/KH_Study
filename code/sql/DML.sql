-- DML
-- INSERT, UPDATE, DELETE
INSERT INTO EMPLOYEE
VALUES(900,'장발장','990310-1232435', 'jbj12@iei.or.kr',
    '01023234343', 'D1', 'J8', 'S3', 4300000, 0.2, '200', 
    SYSDATE, NULL, 'N');
SELECT * FROM EMPLOYEE
WHERE EMP_NAME = '장발장';

UPDATE DEPARTMENT
SET DEPT_TITLE = '전략기획팀'
WHERE DEPT_ID = 'D9';

SELECT * FROM DEPARTMENT;

DELETE FROM EMPLOYEE
WHERE EMP_ID = '900';

SELECT * FROM EMPLOYEE;

ROLLBACK; --되돌리기! (저장 안된 것에 한해)

-- INSERT ALL : 두 개의 테이블에 동시에 데이터를 등록
CREATE TABLE EMP_DEPT_D1 AS 
    SELECT EMP_ID, EMP_NAME, DEPT_CODE, HIRE_DATE
    FROM EMPLOYEE 
    WHERE 1 < 0; -- 항상 false인 조건을 주면 데이터 없이 컬럼만 옮겨옴

SELECT * FROM EMP_DEPT_D1;
DROP TABLE EMP_DEPT_D1;

CREATE TABLE EMP_MANAGER AS
    SELECT EMP_ID, EMP_NAME, MANAGER_ID
    FROM EMPLOYEE WHERE 1 = 0;
    
SELECT * FROM EMP_MANAGER;

INSERT ALL
INTO EMP_DEPT_D1 VALUES(EMP_ID, EMP_NAME, DEPT_CODE, HIRE_DATE)
INTO EMP_MANAGER VALUES(EMP_ID, EMP_NAME, MANAGER_ID)
SELECT EMP_ID, EMP_NAME, DEPT_CODE, HIRE_DATE, MANAGER_ID
FROM EMPLOYEE
WHERE DEPT_CODE = 'D1';

-- EMPLOYEE 테이블의 모든 사원의 입사일을 기준으로 2010년 1월 1일 이전에
-- 입사한 사원의 사번, 이름, 입사일, 급여를 조회해서 EMP_OLD테이블에 삽입하고,
-- 그 이후에 입사한 사원의 정보는 EMP_NEW 테이블에 삽입하시오
CREATE TABLE EMP_OLD AS
    SELECT EMP_ID, EMP_NAME, HIRE_DATE, SALARY
    FROM EMPLOYEE
    WHERE 1 = 0;
    
CREATE TABLE EMP_NEW AS
    SELECT EMP_ID, EMP_NAME, HIRE_DATE, SALARY
    FROM EMPLOYEE
    WHERE 1 = 0;
    
INSERT ALL
WHEN HIRE_DATE < '2010/01/01' THEN
INTO EMP_OLD VALUES(EMP_ID, EMP_NAME, HIRE_DATE, SALARY)
WHEN HIRE_DATE >= '2010/01/01' THEN
INTO EMP_NEW VALUES(EMP_ID, EMP_NAME, HIRE_DATE, SALARY)
SELECT EMP_ID, EMP_NAME, HIRE_DATE, SALARY
FROM EMPLOYEE;

SELECT * FROM EMP_OLD;
SELECT * FROM EMP_NEW;


-- MERGE : 두 테이블을 합치기
CREATE TABLE M_TEST01(
    ID CHAR(20),
    NAME VARCHAR2(20)
);

CREATE TABLE M_TEST02(
    ID CHAR(20),
    NAME VARCHAR2(20)
);

INSERT INTO M_TEST01
VALUES('user11','민봉식');
INSERT INTO M_TEST01
VALUES('user22','민궁둥');
INSERT INTO M_TEST01
VALUES('user33','민소희');

INSERT INTO M_TEST02
VALUES('user12','아이폰');
INSERT INTO M_TEST02
VALUES('user22','에어팟');
INSERT INTO M_TEST02
VALUES('user32','이이팟');

ROLLBACK;
SELECT * FROM M_TEST01;
SELECT * FROM M_TEST02;

MERGE INTO M_TEST01 USING M_TEST02 ON (M_TEST01.ID=M_TEST02.ID)
WHEN MATCHED THEN
UPDATE SET M_TEST01.NAME = M_TEST02.NAME
WHEN NOT MATCHED THEN
INSERT VALUES(M_TEST02.ID, M_TEST02.NAME);